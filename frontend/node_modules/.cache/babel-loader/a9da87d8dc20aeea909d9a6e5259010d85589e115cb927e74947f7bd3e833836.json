{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinseth\\\\Downloads\\\\task\\\\frontend\\\\src\\\\components\\\\AuthForm.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { Form, Link } from \"react-router-dom\";\n\n// import classes from \"./AuthForm.module.css\";\n\n// function AuthForm() {\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [isSSOLogin, setIsSSOLogin] = useState(false);\n\n//   function switchAuthHandler() {\n//     setIsLogin((isCurrentlyLogin) => !isCurrentlyLogin);\n//     setIsSSOLogin(false); // Reset SSO state if switching modes\n//   }\n\n//   function handleSSOClick(e) {\n//     e.preventDefault();\n//     setIsSSOLogin(true);\n//   }\n\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? \"Log in\" : \"Create a new user\"}</h1>\n//         {isSSOLogin ? (\n//           <>\n//             <p>\n//               <label htmlFor=\"email\">Email</label>\n//               <input id=\"email\" type=\"email\" name=\"email\" required />\n//             </p>\n//           </>\n//         ) : (\n//           <>\n//             <p>\n//               <label htmlFor=\"email\">Email</label>\n//               <input id=\"email\" type=\"email\" name=\"email\" required />\n//             </p>\n//             <p>\n//               <label htmlFor=\"password\">Password</label>\n//               <input id=\"password\" type=\"password\" name=\"password\" required />\n//             </p>\n//             {isLogin && (\n//               <p>\n//                 <a href=\"#\" onClick={handleSSOClick}>\n//                   Login with SSO\n//                 </a>\n//               </p>\n//             )}\n//           </>\n//         )}\n//         <div className={classes.actions}>\n//           {!isSSOLogin ? (\n//             <button onClick={switchAuthHandler} type=\"button\">\n//               {isLogin ? \"Create new user\" : \"Login\"}\n//             </button>\n//           ) : (\n//             <button onClick={switchAuthHandler} type=\"button\">\n//               Create new user\n//             </button>\n//           )}\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n\nimport { useState } from \"react\";\nimport { Form } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isSSOLogin, setIsSSOLogin] = useState(false);\n  function switchAuthHandler() {\n    setIsLogin(isCurrentlyLogin => !isCurrentlyLogin);\n    setIsSSOLogin(false); // Reset SSO state if switching modes\n  }\n  function handleSSOClick(e) {\n    e.preventDefault();\n    setIsSSOLogin(true);\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"post\",\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Log in\" : \"Create a new user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !isSSOLogin && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), !isSSOLogin && isLogin && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: handleSSOClick,\n          children: \"Login with SSO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchAuthHandler,\n        type: \"button\",\n        children: isSSOLogin || !isLogin ? \"Create new user\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthForm, \"+CPNLNJmn7eHO+hn7pnwF71x3Uw=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","Form","classes","jsxDEV","_jsxDEV","AuthForm","_s","isLogin","setIsLogin","isSSOLogin","setIsSSOLogin","switchAuthHandler","isCurrentlyLogin","handleSSOClick","e","preventDefault","method","className","form","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","href","onClick","actions","_c","$RefreshReg$"],"sources":["C:/Users/vinseth/Downloads/task/frontend/src/components/AuthForm.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { Form, Link } from \"react-router-dom\";\n\n// import classes from \"./AuthForm.module.css\";\n\n// function AuthForm() {\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [isSSOLogin, setIsSSOLogin] = useState(false);\n\n//   function switchAuthHandler() {\n//     setIsLogin((isCurrentlyLogin) => !isCurrentlyLogin);\n//     setIsSSOLogin(false); // Reset SSO state if switching modes\n//   }\n\n//   function handleSSOClick(e) {\n//     e.preventDefault();\n//     setIsSSOLogin(true);\n//   }\n\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? \"Log in\" : \"Create a new user\"}</h1>\n//         {isSSOLogin ? (\n//           <>\n//             <p>\n//               <label htmlFor=\"email\">Email</label>\n//               <input id=\"email\" type=\"email\" name=\"email\" required />\n//             </p>\n//           </>\n//         ) : (\n//           <>\n//             <p>\n//               <label htmlFor=\"email\">Email</label>\n//               <input id=\"email\" type=\"email\" name=\"email\" required />\n//             </p>\n//             <p>\n//               <label htmlFor=\"password\">Password</label>\n//               <input id=\"password\" type=\"password\" name=\"password\" required />\n//             </p>\n//             {isLogin && (\n//               <p>\n//                 <a href=\"#\" onClick={handleSSOClick}>\n//                   Login with SSO\n//                 </a>\n//               </p>\n//             )}\n//           </>\n//         )}\n//         <div className={classes.actions}>\n//           {!isSSOLogin ? (\n//             <button onClick={switchAuthHandler} type=\"button\">\n//               {isLogin ? \"Create new user\" : \"Login\"}\n//             </button>\n//           ) : (\n//             <button onClick={switchAuthHandler} type=\"button\">\n//               Create new user\n//             </button>\n//           )}\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n\nimport { useState } from \"react\";\nimport { Form } from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nfunction AuthForm() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isSSOLogin, setIsSSOLogin] = useState(false);\n\n  function switchAuthHandler() {\n    setIsLogin((isCurrentlyLogin) => !isCurrentlyLogin);\n    setIsSSOLogin(false); // Reset SSO state if switching modes\n  }\n\n  function handleSSOClick(e) {\n    e.preventDefault();\n    setIsSSOLogin(true);\n  }\n\n  return (\n    <Form method=\"post\" className={classes.form}>\n      <h1>{isLogin ? \"Log in\" : \"Create a new user\"}</h1>\n      <div>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id=\"email\" type=\"email\" name=\"email\" required />\n        </p>\n        {!isSSOLogin && (\n          <p>\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" name=\"password\" required />\n          </p>\n        )}\n        {!isSSOLogin && isLogin && (\n          <p>\n            <a href=\"#\" onClick={handleSSOClick}>\n              Login with SSO\n            </a>\n          </p>\n        )}\n      </div>\n      <div className={classes.actions}>\n        <button onClick={switchAuthHandler} type=\"button\">\n          {isSSOLogin || !isLogin ? \"Create new user\" : \"Login\"}\n        </button>\n        <button>Save</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default AuthForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinseth\\\\Downloads\\\\task\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\nimport { msalConfig } from './util/auth-config';\nimport './index.css';\nimport App from './App';\n\n// MSAL should be instantiated outside the component tree to prevent it from being re-instantiated on re-renders\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\n// Default to using the 1st account if no account is active on page load\nif (!msalInstance.getActiveAccount() && msalInstance.getAllAccounts().length > 0) {\n  msalInstance.setActiveAccount(msalInstance.getActiveAccount()[0]);\n}\nmsalInstance.addEventCallback(event => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n    const account = event.payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    instance: msalInstance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","PublicClientApplication","EventType","msalConfig","App","jsxDEV","_jsxDEV","msalInstance","getActiveAccount","getAllAccounts","length","setActiveAccount","addEventCallback","event","eventType","LOGIN_SUCCESS","payload","account","root","createRoot","document","getElementById","render","StrictMode","children","instance","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/vinseth/Downloads/task/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\nimport { msalConfig } from './util/auth-config';\nimport './index.css';\nimport App from './App';\n\n// MSAL should be instantiated outside the component tree to prevent it from being re-instantiated on re-renders\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\n// Default to using the 1st account if no account is active on page load\nif(!msalInstance.getActiveAccount() && msalInstance.getAllAccounts().length > 0){\n  msalInstance.setActiveAccount(msalInstance.getActiveAccount()[0]);\n}\n\nmsalInstance.addEventCallback((event) => {\n  if(event.eventType === EventType.LOGIN_SUCCESS && event.payload.account){\n    const account = event.payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n})\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App instance={msalInstance} />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,uBAAuB,EAAEC,SAAS,QAAQ,qBAAqB;AACxE,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,GAAG,IAAIN,uBAAuB,CAACE,UAAU,CAAC;;AAEnE;AACA,IAAG,CAACI,YAAY,CAACC,gBAAgB,CAAC,CAAC,IAAID,YAAY,CAACE,cAAc,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAC;EAC9EH,YAAY,CAACI,gBAAgB,CAACJ,YAAY,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE;AAEAD,YAAY,CAACK,gBAAgB,CAAEC,KAAK,IAAK;EACvC,IAAGA,KAAK,CAACC,SAAS,KAAKZ,SAAS,CAACa,aAAa,IAAIF,KAAK,CAACG,OAAO,CAACC,OAAO,EAAC;IACtE,MAAMA,OAAO,GAAGJ,KAAK,CAACG,OAAO,CAACC,OAAO;IACrCV,YAAY,CAACI,gBAAgB,CAACM,OAAO,CAAC;EACxC;AACF,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACThB,OAAA,CAACP,KAAK,CAACwB,UAAU;EAAAC,QAAA,eACflB,OAAA,CAACF,GAAG;IAACqB,QAAQ,EAAElB;EAAa;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACf,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}